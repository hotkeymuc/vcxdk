; This file can be pre-pended to generate a working VTech Genius CX cartridge

; Cartridge header (VTECHCARTRIDGE, ONBOARDCARTRIDGE, TESTHWCART)
	db      'VTECHCARTRIDGE'
	db      0x00, 0x00
	db      0xed, 0x01
	db      '016959'
	
; Some sort of relocation table?
	db      0x00, 0x02, 0x01, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db      0x00, 0x00, 0x00, 0x0B, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x05, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x05, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00
	db      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00
	


; DATA: Const data
;ofs 0x180
;.str_hello:
;	db      'Hello world!',0x00
;.str_htk:
;	db      'HotKey was here!',0x00

; Define some symbols we need for a successful compile
;.rdata_2:

; TEXT: Actual code (at offset 0x200)
ofs 0x200	; Hard-coded entry point when invoking the cartridge
	
; This might be the target of the relocation table?
	movw    $0xB700, sp
	movd    $0x000300, (r8,r7)
	movd    $0x000300, (r10,r9)
	bal     (ra,era), _relocation
	movd    $0x000300, (r8,r7)
	movd    $0x000300, (r10,r9)
	bal     (ra,era), _relocation
	movd    $0x000300, (r8,r7)
	movd    $0x000300, (r10,r9)
	bal     (ra,era), _relocation
	movd    $0x000000, (r8,r7)
	movd    $0x000000, (r10,r9)
	bal     (ra,era), _relocation
	movd    $0x000000, (r8,r7)
	movd    $0x000000, (r10,r9)
	bal     (ra,era), _relocation
	movd    $0x000000, (r8,r7)
	movd    $0x000000, (r10,r9)
	bal     (ra,era), _relocation
	movd    $0x000000, (r8,r7)
	movd    $0x000000, (r10,r9)
	bal     (ra,era), _relocation
	movd    $0x100B52, (r8,r7)
	movd    $0x100B52, (r10,r9)
	movd    $0x000300, (r12,r11)
	bal     (ra,era), _relocation2
	movd    $0x100B52, (r8,r7)
	movd    $0x100B52, (r10,r9)
	movd    $0x000300, (r12,r11)
	bal     (ra,era), _relocation2
	movd    $0x100B52, (r8,r7)
	movd    $0x100B52, (r10,r9)
	movd    $0x000300, (r12,r11)
	bal     (ra,era), _relocation2
	movd    $0x000000, (r8,r7)
	movd    $0x000000, (r10,r9)
	movd    $0x000000, (r12,r11)
	bal     (ra,era), _relocation2
	movd    $0x000000, (r8,r7)
	movd    $0x000000, (r10,r9)
	movd    $0x000000, (r12,r11)
	bal     (ra,era), _relocation2
	movd    $0x000000, (r8,r7)
	movd    $0x000000, (r10,r9)
	movd    $0x000000, (r12,r11)
	bal     (ra,era), _relocation2
	movd    $0x000000, (r8,r7)
	movd    $0x000000, (r10,r9)
	movd    $0x000000, (r12,r11)
	bal     (ra,era), _relocation2
	movd    $0x000000, (r8,r7)
	movd    $0x000000, (r10,r9)
	movd    $0x000000, (r12,r11)
	bal     (ra,era), _relocation2
	bal     (ra,era), _main
	
_relocation:
_relocation2:
	;loadb   0(r8,r7), r0
	;storb   r0, 0(r12,r11)
	;addw    $0x1, r7
	;addcw   $0, r8
	;addw    $0x1, r11
	;addcw   $0, r12
	;cmpw    r7, r9
	;bne     0x000300
	;cmpw    r8, r10
	;bne     0x000308
	jump    (ra,era)
; End of potential relocated code
	
	
	;br _main	; Only for short jump
	bal	(ra,era), _main

nop
nop
nop
nop

